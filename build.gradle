plugins {
 id 'org.springframework.boot' version '2.7.4'
 id 'io.spring.dependency-management' version '1.0.14.RELEASE'
 id 'java'
 id 'war'
 id "com.github.node-gradle.node" version "3.5.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
 compileOnly {
  extendsFrom annotationProcessor
 }
}

bootWar {
    enabled = true
}

bootJar {
    launchScript ()
}

repositories {
 mavenCentral()
}

dependencies {
 implementation 'org.springframework.boot:spring-boot-starter-web'
 compileOnly 'org.projectlombok:lombok'
 developmentOnly 'org.springframework.boot:spring-boot-devtools'
 annotationProcessor 'org.projectlombok:lombok'
 testImplementation 'org.springframework.boot:spring-boot-starter-test'
 implementation 'com.googlecode.json-simple:json-simple:1.1.1'
 implementation 'org.json:json:20211205'
 implementation 'org.apache.commons:commons-collections4:4.0'
 implementation 'org.springframework.session:spring-session-core'
 // MyBatis 라이브러리 의존성 추가
 runtimeOnly 'mysql:mysql-connector-java:8.0.25'
 implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
 //google sheet
 implementation 'com.google.api-client:google-api-client:2.0.0'
 implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
 implementation 'com.google.apis:google-api-services-sheets:v4-rev20220927-2.0.0'
}

tasks.named('test') {
 useJUnitPlatform()
}

def reactAppDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "copyReactFile"
}

task installReact(type: Exec) {
	workingDir "$reactAppDir"
	inputs.dir "$reactAppDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$reactAppDir"
	inputs.dir "$reactAppDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactFile(type: Copy) {
	dependsOn "buildReact"
	from "$reactAppDir/build/"
	into "$buildDir/resources/main/static/"
}

    task frontEndBuild {
        doLast {
            installReact.execute()
            buildReact.execute()
            copyReactFile.execute()
        }
    }